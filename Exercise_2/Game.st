BlElement subclass: #GameCharacter	instanceVariableNames: 'activeKeys'	classVariableNames: ''	package: 'Game'!!GameCharacter methodsFor: 'initialization' stamp: 'np 7/14/2024 15:11'!initialize	super initialize.	self background: Color green.	self size: 10 @ 10.	activeKeys := Set new.	! !!GameCharacter methodsFor: 'event handling' stamp: 'np 7/14/2024 15:10'!handleKeyDown: anEvent	activeKeys add: anEvent key.	! !!GameCharacter methodsFor: 'events - processing' stamp: 'np 7/14/2024 15:10'!handleKeyUp: anEvent	activeKeys remove: anEvent key.	! !!GameCharacter methodsFor: 'accessing' stamp: 'np 7/14/2024 15:14'!move	| x y keysCpy v speed|	speed := 3.	x := 0.	y := 0.	v := 0@0.	keysCpy := activeKeys copy.	(keysCpy includes: KeyboardKey A ) ifTrue: [ x := x - 1 ].	(keysCpy includes: KeyboardKey D ) ifTrue: [ x := x + 1 ].	(keysCpy includes: KeyboardKey W ) ifTrue: [ y := y - 1 ].	(keysCpy includes: KeyboardKey S ) ifTrue: [ y := y + 1 ].		((x@y) = (0@0)) ifFalse: [ v := ((x@y) normalized) * speed ].	self position: (self position + v).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GameCharacter class	instanceVariableNames: ''!!GameCharacter class methodsFor: 'instance creation' stamp: 'np 7/13/2024 22:15'!open	self initialize.! !BlElement subclass: #GameNPC	instanceVariableNames: ''	classVariableNames: ''	package: 'Game'!!GameNPC methodsFor: 'initialization' stamp: 'np 7/14/2024 15:11'!initialize	super initialize .	self size: 20 @ 20.	self background: Color red.	self position: 750 @ 300.! !!GameNPC methodsFor: 'accessing' stamp: 'np 7/14/2024 15:11'!move: aPosition	| directionVector normalizedVector speed newPosition |	speed := 2.5.	directionVector := aPosition - self position.	normalizedVector := (directionVector x = 0 and: [ directionVector y = 0 ])        ifTrue: [ 0@0 ]        ifFalse: [ directionVector normalized * speed ].	newPosition := self position + normalizedVector.	self position: newPosition.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GameNPC class	instanceVariableNames: ''!!GameNPC class methodsFor: 'instance creation' stamp: 'np 7/14/2024 15:11'!open	self initialize.! !BlElement subclass: #GameTunnel	instanceVariableNames: ''	classVariableNames: ''	package: 'Game'!!GameTunnel methodsFor: 'initialization' stamp: 'np 7/14/2024 15:09'!initialize 	super initialize.	self size: 10 @ 10.	self background: Color blue.	self position: 700 @ 300.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GameTunnel class	instanceVariableNames: ''!!GameTunnel class methodsFor: 'private - initialization' stamp: 'np 7/14/2024 15:09'!init	self initialize.! !BlElement subclass: #GameWindow	instanceVariableNames: 'window state'	classVariableNames: ''	package: 'Game'!!GameWindow methodsFor: 'as yet unclassified' stamp: 'np 7/14/2024 19:26'!checkTunnel: aMousePos tunnelPos: aTunnelPos	 | dx dy |    dx := aTunnelPos x - aMousePos x.    dy := aTunnelPos y - aMousePos y.    ^ ((dx * dx) + (dy * dy)) <= (10 * 10).! !!GameWindow methodsFor: 'as yet unclassified' stamp: 'np 7/14/2024 19:24'!gameEnd: aState	|gameEndElem text|	gameEndElem := BlElement new.	gameEndElem size: 400@200.	gameEndElem position: 200@200.	gameEndElem background: Color red.	text := BlTextElement new.	text defaultFontSize: 24.	text text: 'Game finished!! Cat won!!' asRopedText .	(aState == 1) ifTrue: [text text: 'Game finished!! Mouse won!!' asRopedText . gameEndElem background: Color green].	(aState == 2) ifTrue: [text text: 'Game finished!! Cat won!!' asRopedText . gameEndElem background: Color red].	gameEndElem addChild: text.	window root addChild: gameEndElem .! !!GameWindow methodsFor: 'as yet unclassified' stamp: 'np 7/14/2024 15:23'!checkCaught: aCatPos mousePos: aMousePos	 | dx dy |    dx := aCatPos x - aMousePos x.    dy := aCatPos y - aMousePos y.    ^ ((dx * dx) + (dy * dy)) <= (15 * 15).! !!GameWindow methodsFor: 'initialization' stamp: 'np 7/14/2024 19:28'!initialize	|mouse tunnel cat|	super initialize.	state := 0.	window := BlSpace new.	window extent: 800 @ 600.	window title: 'Cat and Mouse game'.		mouse := GameCharacter new.	window root addChild: mouse.		cat := GameNPC new.	window root addChild: cat.		tunnel := GameTunnel new.	window root addChild: tunnel.		window addEventHandlerOn: BlKeyDownEvent do: [ :event | mouse handleKeyDown: event ].	window addEventHandlerOn: BlKeyUpEvent do: [ :event | mouse handleKeyUp: event ].	window show.	(Delay forMilliseconds: 1000) wait.	[		[ state == 0 ] whileTrue: [			mouse move.			cat move: mouse position.			(self checkTunnel: mouse position tunnelPos: tunnel position) ifTrue: [ state := 1 ].			(self checkCaught: cat position mousePos: mouse position) ifTrue: [ state := 2 ].			(Delay forMilliseconds: 16) wait.		].	self gameEnd: state.	] fork.		! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GameWindow class	instanceVariableNames: ''!!GameWindow class methodsFor: 'instance creation' stamp: 'np 7/13/2024 22:10'!open	self initialize.! !