'From Pharo11.0.0 of 7 March 2024 [Build information: Pharo-11.0.0+build.726.sha.aece1b5473acf3830a0e082c1bc3a15d4ff3522b (64 Bit)] on 14 July 2024 at 7:29:20.391 pm'!BlElement subclass: #GameWindow	instanceVariableNames: 'window state'	classVariableNames: ''	package: 'Game'!!GameWindow methodsFor: 'as yet unclassified' stamp: 'np 7/14/2024 19:26'!checkTunnel: aMousePos tunnelPos: aTunnelPos	 | dx dy |    dx := aTunnelPos x - aMousePos x.    dy := aTunnelPos y - aMousePos y.    ^ ((dx * dx) + (dy * dy)) <= (10 * 10).! !!GameWindow methodsFor: 'as yet unclassified' stamp: 'np 7/14/2024 19:24'!gameEnd: aState	|gameEndElem text|	gameEndElem := BlElement new.	gameEndElem size: 400@200.	gameEndElem position: 200@200.	gameEndElem background: Color red.	text := BlTextElement new.	text defaultFontSize: 24.	text text: 'Game finished!! Cat won!!' asRopedText .	(aState == 1) ifTrue: [text text: 'Game finished!! Mouse won!!' asRopedText . gameEndElem background: Color green].	(aState == 2) ifTrue: [text text: 'Game finished!! Cat won!!' asRopedText . gameEndElem background: Color red].	gameEndElem addChild: text.	window root addChild: gameEndElem .! !!GameWindow methodsFor: 'as yet unclassified' stamp: 'np 7/14/2024 15:23'!checkCaught: aCatPos mousePos: aMousePos	 | dx dy |    dx := aCatPos x - aMousePos x.    dy := aCatPos y - aMousePos y.    ^ ((dx * dx) + (dy * dy)) <= (15 * 15).! !!GameWindow methodsFor: 'initialization' stamp: 'np 7/14/2024 19:28'!initialize	|mouse tunnel cat|	super initialize.	state := 0.	window := BlSpace new.	window extent: 800 @ 600.	window title: 'Cat and Mouse game'.		mouse := GameCharacter new.	window root addChild: mouse.		cat := GameNPC new.	window root addChild: cat.		tunnel := GameTunnel new.	window root addChild: tunnel.		window addEventHandlerOn: BlKeyDownEvent do: [ :event | mouse handleKeyDown: event ].	window addEventHandlerOn: BlKeyUpEvent do: [ :event | mouse handleKeyUp: event ].	window show.	(Delay forMilliseconds: 1000) wait.	[		[ state == 0 ] whileTrue: [			mouse move.			cat move: mouse position.			(self checkTunnel: mouse position tunnelPos: tunnel position) ifTrue: [ state := 1 ].			(self checkCaught: cat position mousePos: mouse position) ifTrue: [ state := 2 ].			(Delay forMilliseconds: 16) wait.		].	self gameEnd: state.	] fork.		! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GameWindow class	instanceVariableNames: ''!!GameWindow class methodsFor: 'instance creation' stamp: 'np 7/13/2024 22:10'!open	self initialize.! !